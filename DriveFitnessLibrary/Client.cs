//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DriveFitnessLibrary
{
    using System;
    using System.Collections.Generic;
    
    public partial class Client : System.ComponentModel.INotifyPropertyChanged
    {
    
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.Attendance = new HashSet<Attendance>();
        }
    
        private int _ClientId;
        public int ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    _ClientId = value;
                    OnPropertyChanged("ClientId");
                }
            }
        }
     
        private int _GroupId;
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    _GroupId = value;
                    OnPropertyChanged("GroupId");
                }
            }
        }
     
        private string _ClientName;
        public string ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                if (_ClientName != value)
                {
                    _ClientName = value;
                    OnPropertyChanged("ClientName");
                }
            }
        }
     
        private string _ClientLastname;
        public string ClientLastname
        {
            get
            {
                return _ClientLastname;
            }
            set
            {
                if (_ClientLastname != value)
                {
                    _ClientLastname = value;
                    OnPropertyChanged("ClientLastname");
                }
            }
        }
     
        private Nullable<System.DateTime> _ClientBirthday;
        public Nullable<System.DateTime> ClientBirthday
        {
            get
            {
                return _ClientBirthday;
            }
            set
            {
                if (_ClientBirthday != value)
                {
                    _ClientBirthday = value;
                    OnPropertyChanged("ClientBirthday");
                }
            }
        }
     
        private string _ClientEmail;
     public string ClientEmail
        {
            get
            {
                return _ClientEmail;
            }
            set
            {
                if (_ClientEmail != value)
                {
                    _ClientEmail = value;
                    OnPropertyChanged("ClientEmail");
                }
            }
        }
     
        private string _ClientTelephone;
     public string ClientTelephone
        {
            get
            {
                return _ClientTelephone;
            }
            set
            {
                if (_ClientTelephone != value)
                {
                    _ClientTelephone = value;
                    OnPropertyChanged("ClientTelephone");
                }
            }
        }
     
        private Nullable<int> _SubscriptionId;
     public Nullable<int> SubscriptionId
        {
            get
            {
                return _SubscriptionId;
            }
            set
            {
                if (_SubscriptionId != value)
                {
                    _SubscriptionId = value;
                    OnPropertyChanged("SubscriptionId");
                }
            }
        }
     
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Attendance> _Attendance;
     public virtual ICollection<Attendance> Attendance 
     { 
      get
      {
       return _Attendance;
      } 
      set
      {
       if(_Attendance != value)
       {
        _Attendance = value;
        OnPropertyChanged("Attendance");
       }
      }
     }
     
        private Group _Group;
     public virtual Group Group 
     { 
      get
      {
       return _Group;
      } 
      set
      {
       if(_Group != value)
       {
        _Group = value;
        OnPropertyChanged("Group");
       }
      }
     }
     
        private Subscription _Subscription;
     public virtual Subscription Subscription 
     { 
      get
      {
       return _Subscription;
      } 
      set
      {
       if(_Subscription != value)
       {
        _Subscription = value;
        OnPropertyChanged("Subscription");
       }
      }
     }


        public override string ToString()
        {
            return string.Format("{0} {1}", ClientLastname, ClientName);
        }
    }
}
